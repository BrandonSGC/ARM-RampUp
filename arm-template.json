{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "defaultValue": "storageaccountbgc",
      "metadata": {
        "description": "Name of the storage account. Must be globally unique."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "virtual-network",
      "metadata": {
        "description": "Name of the virtual network."
      }
    },
    "deployZone": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Set to true to deploy the DNS Zone resource. Set to false to skip deployment of this resource."
      }
    },
    "scriptName": {
      "type": "string",
      "defaultValue": "Brandon Gomez",
      "metadata": {
        "description": "Name to be used in the PowerShell script within the deployment script resource."
      }
    }
  },
  "variables": {
    "exampleVariable": "From parent template"
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "comments": "This is just a simple storage account resource.",
      "apiVersion": "2021-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "comments": "This is a Virtual Network resource that contains a child resource.",
      "apiVersion": "2022-11-01",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        }
      },
      "resources": [
        {
          "type": "subnets",
          "comments": "This is the child resource of the Virtual Network.",
          "apiVersion": "2022-11-01",
          "name": "default",
          "dependsOn": [
            "[parameters('vnetName')]"
          ],
          "properties": {
            "addressPrefix": "10.0.0.0/24"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "comments": "This is going to deploy a nested template.",
      "apiVersion": "2022-09-01",
      "name": "nestedTemplate1",
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "variables": {
            "exampleVariable": "From nested template."
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "nestedstorageaccountbgc",
              "location": "[resourceGroup().location]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            }
          ],
          "outputs": {
            "testVar": {
              "type": "string",
              "value": "[variables('exampleVariable')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "comments": "This one deploys a linked template.",
      "apiVersion": "2022-09-01",
      "name": "linkedTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/BrandonSGC/ARM-RampUp/refs/heads/main/storageaccount-create.json",
          "contentVersion": "1.0.0.0"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "comments": "Here we deploy 3 storage account resources using the copy property.",
      "apiVersion": "2021-09-01",
      "name": "[format('{0}storage{1}', copyIndex(), uniqueString(resourceGroup().id))]",
      "copy": {
        "name": "storageAccountCopy",
        "count": 3
      },
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "condition": "[parameters('deployZone')]",
      "comments": "This is a DNS Zone resource that is conditionally deployed depending on the parameter we pass.",
      "type": "Microsoft.Network/dnsZones",
      "apiVersion": "2018-05-01",
      "name": "myZoneBGC.com",
      "location": "global"
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "comments": "This is a simple deployment script runnning PowerShell.",
      "apiVersion": "2020-10-01",
      "name": "runPowerShellInlineWithOutput",
      "location": "[resourceGroup().location]",
      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "8.3",
        "scriptContent": "
          param([string] $scriptName)
          $output = \"Hello {0}\" -f $scriptName
          Write-Output $output
          $DeploymentScriptOutputs = @{}
          $DeploymentScriptOutputs['text'] = $output
        ",
        "arguments": "[concat('-scriptName', ' ', parameters('scriptName'))]",
        "timeout": "PT1H",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D"
      }
    }
  ],
  "outputs": {
    "messageFromTemplate": {
      "type": "string",
      "value": "[reference('nestedTemplate1').outputs.testVar.value]"
    },
    "result": {
      "value": "[reference('runPowerShellInlineWithOutput').outputs.text]",
      "type": "string"
    }
  }
}